// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "mysql"
    url      = env("DATABASE_URL")
}

model Client {
    cli_id          String    @id @default(uuid())
    cli_name        String
    cli_dateOfBirth String
    cli_cpf         String    @unique
    cli_status      String
    cli_gender      String
    cli_sales       Sales[]
    cli_phone       Phone[]
    created_at      DateTime  @default(now())
    update_at       DateTime  @default(now())
    fk_cli_add_id   String
    cli_address     Address[]
}

model Phone {
    pho_id         String @id @default(uuid())
    pho_ddd        String @db.VarChar(3)
    pho_number     String
    pho_type_phone String
    pho_client     Client @relation(fields: [fk_pho_cli_id], references: [cli_id])
    fk_pho_cli_id  String
}

model Address {
    add_id            String @id @default(uuid())
    add_streetName    String
    add_publicPlace   String
    add_number        String
    add_cep           String
    add_neighborhood  String
    add_compostName   String
    add_typeResidence String
    add_client        Client @relation(fields: [fk_add_cli_id], references: [cli_id])
    add_city          String
    add_state         String
    add_country       String
    fk_add_cli_id     String
}

model Sales {
    sal_id        String  @id @default(uuid())
    sal_client    Client  @relation(fields: [fk_sal_cli_id], references: [cli_id])
    sal_item      Item[]
    sal_history   History @relation(fields: [fk_sal_his_id], references: [his_id])
    fk_sal_ite_id String
    fk_sal_cli_id String
    fk_sal_his_id String  @unique
}

model Item {
    ite_id            String  @id @default(uuid())
    ite_quantitySales Int
    ite_products      Product @relation(fields: [fk_ite_pro_id], references: [pro_id])
    ite_sales         Sales   @relation(fields: [fk_ite_sal_id], references: [sal_id])
    fk_ite_sal_id     String  @unique
    fk_ite_pro_id     String  @unique
}

model Product {
    pro_id       String  @id @default(uuid())
    pro_price    Decimal
    pro_quantity Int
    Item         Item?
}

model History {
    his_id     String    @id @default(uuid())
    his_sales  Sales[]
    his_rankig Ranking[]
}

model CreditCart {
    cre_id           String  @id @default(uuid())
    cre_name         String
    cre_cvv          String  @db.VarChar(3)
    cre_number_cart  String
    cre_dateMaturity String
    cre_preference   Boolean
    cre_Flag         Flag    @relation(fields: [fk_cre_fla_id], references: [fla_id])
    fk_cre_fla_id    String
}

model Flag {
    fla_id          String       @id @default(uuid())
    fla_name        String
    fla_creditCarts CreditCart[]
}

model Ranking {
    ran_id           String    @id @default(uuid())
    ran_historySales History[]
}
